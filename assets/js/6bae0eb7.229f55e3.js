"use strict";(self.webpackChunktrefle_docs=self.webpackChunktrefle_docs||[]).push([[120],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=u(t),d=r,f=m["".concat(s,".").concat(d)]||m[d]||c[d]||l;return t?a.createElement(f,i(i({ref:n},p),{},{components:t})):a.createElement(f,i({ref:n},p))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[m]="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5162:function(e,n,t){t.d(n,{Z:function(){return i}});var a=t(7294),r=t(6010),l="tabItem_Ymn6";function i(e){var n=e.children,t=e.hidden,i=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:t},n)}},5488:function(e,n,t){t.d(n,{Z:function(){return d}});var a=t(7462),r=t(7294),l=t(6010),i=t(2389),o=t(7392),s=t(7094),u=t(2466),p="tabList__CuJ",m="tabItem_LNqP";function c(e){var n,t,i=e.lazy,c=e.block,d=e.defaultValue,f=e.values,v=e.groupId,g=e.className,h=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=f?f:h.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),k=(0,o.l)(b,(function(e,n){return e.value===n.value}));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===d?d:null!=(n=null!=d?d:null==(t=h.find((function(e){return e.props.default})))?void 0:t.props.value)?n:h[0].props.value;if(null!==y&&!b.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var _=(0,s.U)(),T=_.tabGroupChoices,E=_.setTabGroupChoices,w=(0,r.useState)(y),N=w[0],O=w[1],x=[],R=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=v){var C=T[v];null!=C&&C!==N&&b.some((function(e){return e.value===C}))&&O(C)}var j=function(e){var n=e.currentTarget,t=x.indexOf(n),a=b[t].value;a!==N&&(R(n),O(a),null!=v&&E(v,String(a)))},F=function(e){var n,t=null;switch(e.key){case"Enter":j(e);break;case"ArrowRight":var a,r=x.indexOf(e.currentTarget)+1;t=null!=(a=x[r])?a:x[0];break;case"ArrowLeft":var l,i=x.indexOf(e.currentTarget)-1;t=null!=(l=x[i])?l:x[x.length-1]}null==(n=t)||n.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":c},g)},b.map((function(e){var n=e.value,t=e.label,i=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:N===n?0:-1,"aria-selected":N===n,key:n,ref:function(e){return x.push(e)},onKeyDown:F,onClick:j},i,{className:(0,l.Z)("tabs__item",m,null==i?void 0:i.className,{"tabs__item--active":N===n})}),null!=t?t:n)}))),i?(0,r.cloneElement)(h.filter((function(e){return e.props.value===N}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==N})}))))}function d(e){var n=(0,i.Z)();return r.createElement(c,(0,a.Z)({key:String(n)},e))}},7454:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return p},default:function(){return v},frontMatter:function(){return u},metadata:function(){return m},toc:function(){return d}});var a=t(7462),r=t(3366),l=(t(7294),t(3905)),i=t(5488),o=t(5162),s=["components"],u={id:"filtering",title:"Filtering"},p=void 0,m={unversionedId:"guides/filtering",id:"guides/filtering",title:"Filtering",description:"",source:"@site/docs/guides/filtering.md",sourceDirName:"guides",slug:"/guides/filtering",permalink:"/docs/guides/filtering",draft:!1,editUrl:"https://github.com/treflehq/documentation/edit/master/docs/guides/filtering.md",tags:[],version:"current",lastUpdatedBy:"Andr\xe9 Aubin",lastUpdatedAt:1670748298,formattedLastUpdatedAt:"Dec 11, 2022",frontMatter:{id:"filtering",title:"Filtering"},sidebar:"someSidebar",previous:{title:"Pagination",permalink:"/docs/guides/pagination"},next:{title:"Sorting",permalink:"/docs/guides/sorting"}},c={},d=[{value:"Filter on a single value",id:"filter-on-a-single-value",level:3},{value:"Filter on several values",id:"filter-on-several-values",level:3},{value:"Filter on ranges",id:"filter-on-ranges",level:3},{value:"Exclude null values",id:"exclude-null-values",level:3}],f={toc:d};function v(e){var n=e.components,t=(0,r.Z)(e,s);return(0,l.kt)("wrapper",(0,a.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"As you may have seen, there is a lot of plants here. In order to find what you're looking for, you can add filters to your query. The full list of available filters are in the reference."),(0,l.kt)("admonition",{title:"In short",type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"We can filter on one or several values, with the ",(0,l.kt)("inlineCode",{parentName:"p"},"filter[FIELD]=value1,value2,value3...")," parameter, or on a range of values, with the ",(0,l.kt)("inlineCode",{parentName:"p"},"range[FIELD]=min,max")," parameter.")),(0,l.kt)("h3",{id:"filter-on-a-single-value"},"Filter on a single value"),(0,l.kt)("p",null,'Let\'s query only plants with the "Beach Strawberry" common name:.'),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://trefle.io/api/v1/plants?token=YOUR_TREFLE_TOKEN&filter%5Bcommon_name%5D=beach%20strawberry"},"https://trefle.io/api/v1/plants?token=YOUR_TREFLE_TOKEN&filter[common_name]=beach%20strawberry")),(0,l.kt)(i.Z,{groupId:"supports",defaultValue:"browser",values:[{label:"Browser",value:"browser"},{label:"CURL",value:"curl"},{label:"NodeJS",value:"node"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"browser",mdxType:"TabItem"},(0,l.kt)("p",null,"Open your browser and navigate to"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://trefle.io/api/v1/plants?token=YOUR_TREFLE_TOKEN&filter%5Bcommon_name%5D=beach%20strawberry"},(0,l.kt)("inlineCode",{parentName:"a"},"https://trefle.io/api/v1/plants?token=YOUR_TREFLE_TOKEN&filter[common_name]=beach%20strawberry")))),(0,l.kt)(o.Z,{value:"curl",mdxType:"TabItem"},(0,l.kt)("p",null,"In your terminal:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"curl 'https://trefle.io/api/v1/plants?token=YOUR_TREFLE_TOKEN&filter[common_name]=beach%20strawberry'\n"))),(0,l.kt)(o.Z,{value:"node",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const fetch = require('node-fetch');\n\n(async () => {\n  const response = await fetch('https://trefle.io/api/v1/plants?token=YOUR_TREFLE_TOKEN&filter[common_name]=beach%20strawberry');\n  const json = await response.json();\n  console.log(json);\n})();\n")))),(0,l.kt)("p",null,"And we got:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "data": [\n        {\n            "author": "(L.) Mill.",\n            "bibliography": "Gard. Dict. ed. 8 : n.\xb0 4 (1768)",\n            "common_name": "beach strawberry",\n            "complete_data": true,\n            "family_common_name": "Rose family",\n            "genus_id": 2585,\n            "id": 131974,\n            "image_url": null,\n            "links": {\n                "genus": "/api/v1/genus/fragaria",\n                "self": "/api/v1/plants/fragaria-chiloensis",\n                "species": "/api/v1/plants/fragaria-chiloensis/species"\n            },\n            "main_species_id": 137607,\n            "observations": "Bolivia, C. & S. Chile to S. Argentina",\n            "scientific_name": "Fragaria chiloensis",\n            "slug": "fragaria-chiloensis",\n            "vegetable": false,\n            "year": 1768\n        }\n    ],\n    "links": {\n        "first": "/api/v1/plants?filter%5Bcommon_name%5D=beach+strawberry&page=1",\n        "last": "/api/v1/plants?filter%5Bcommon_name%5D=beach+strawberry&page=1",\n        "self": "/api/v1/plants?filter%5Bcommon_name%5D=beach+strawberry"\n    },\n    "meta": {\n        "total": 1\n    }\n}\n')),(0,l.kt)("h3",{id:"filter-on-several-values"},"Filter on several values"),(0,l.kt)("p",null,"Now, we can add more criterias by separating our values with a comma (",(0,l.kt)("inlineCode",{parentName:"p"},","),")."),(0,l.kt)("p",null,"Let's query only species with edible roots ",(0,l.kt)("strong",{parentName:"p"},"OR")," leaves:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&filter%5Bedible_part%5D=roots,leaves"},"https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&filter[edible_part]=roots,leaves")),(0,l.kt)(i.Z,{groupId:"supports",defaultValue:"browser",values:[{label:"Browser",value:"browser"},{label:"CURL",value:"curl"},{label:"NodeJS",value:"node"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"browser",mdxType:"TabItem"},(0,l.kt)("p",null,"Open your browser and navigate to"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&filter%5Bedible_part%5D=roots,leaves"},(0,l.kt)("inlineCode",{parentName:"a"},"https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&filter[edible_part]=roots,leaves")))),(0,l.kt)(o.Z,{value:"curl",mdxType:"TabItem"},(0,l.kt)("p",null,"In your terminal:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"curl 'https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&filter[edible_part]=roots,leaves'\n"))),(0,l.kt)(o.Z,{value:"node",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const fetch = require('node-fetch');\n\n(async () => {\n  const response = await fetch('https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&filter[edible_part]=roots,leaves');\n  const json = await response.json();\n  console.log(json);\n})();\n")))),(0,l.kt)("p",null,"And we got:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "data": [\n        {\n            "author": "L.",\n            "bibliography": "Sp. pl. 1:219.  1753",\n            "common_name": "lambsquarters",\n            "family": "Amaranthaceae",\n            "family_common_name": "Goosefoot family",\n            "genus": "Chenopodium",\n            "genus_id": 1690,\n            "id": 119861,\n            "image_url": "https://bs.floristic.org/image/o/7210dfc0c2a48bdde194bef37c7b7956974bc1b7",\n            "links": {\n                "genus": "/api/v1/genus/chenopodium",\n                "plant": "/api/v1/plants/chenopodium-album",\n                "self": "/api/v1/species/chenopodium-album"\n            },\n            "plant_id": 114228,\n            "rank": "species",\n            "scientific_name": "Chenopodium album",\n            "slug": "chenopodium-album",\n            "status": "accepted",\n            "synonyms": [\n                "Chenopodium album var. viride",\n                "Chenopodium album var. candicans",\n                "Chenopodium album var. album",\n                "Chenopodium paucidentatum",\n                "Chenopodium pedunculare",\n                "Chenopodium album var. polymorphum"\n            ],\n            "year": 1753\n        },\n        {\n            "author": "L.",\n            "bibliography": "Sp. Pl.: 813 (1753)",\n            "common_name": "chicory",\n            "family": "Asteraceae",\n            "family_common_name": "Aster family",\n            "genus": "Cichorium",\n            "genus_id": 1778,\n            "id": 120546,\n            "image_url": "https://bs.floristic.org/image/o/eb049be6b9186aed76ada3c8d3cd54d762842aa8",\n            "links": {\n                "genus": "/api/v1/genus/cichorium",\n                "plant": "/api/v1/plants/cichorium-intybus",\n                "self": "/api/v1/species/cichorium-intybus"\n            },\n            "plant_id": 114913,\n            "rank": "species",\n            "scientific_name": "Cichorium intybus",\n            "slug": "cichorium-intybus",\n            "status": "accepted",\n            "synonyms": [\n                "Cichorium divaricatum",\n                "Cichorium cicorea",\n                "Cichorium byzantinum",\n                "Huernia verekeri var. stenensonii"\n            ],\n            "year": 1753\n        },\n        // ... 28 more items...\n    ],\n    "links": {\n        "first": "/api/v1/species?filter%5Bedible_part%5D=roots%2Cleaves&page=1",\n        "last": "/api/v1/species?filter%5Bedible_part%5D=roots%2Cleaves&page=4",\n        "next": "/api/v1/species?filter%5Bedible_part%5D=roots%2Cleaves&page=2",\n        "self": "/api/v1/species?filter%5Bedible_part%5D=roots%2Cleaves"\n    },\n    "meta": {\n        "total": 80\n    }\n}\n')),(0,l.kt)("h3",{id:"filter-on-ranges"},"Filter on ranges"),(0,l.kt)("p",null,"Now we want to filter on a range of values."),(0,l.kt)("p",null,"Let's query only species with a minimum height ",(0,l.kt)("strong",{parentName:"p"},"between")," 5 ",(0,l.kt)("strong",{parentName:"p"},"and")," 20 centimeters:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&range%5Bmaximum_height_cm%5D=5,20"},"https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&range[maximum_height_cm]=5,20")),(0,l.kt)("admonition",{title:"Minimum and maximum values",type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"Filtering on ranges also allow to set only minimum or maximum values. For example:"),(0,l.kt)("ul",{parentName:"admonition"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/api/v1/species?range[maximum_height_cm]=5")," only return species higher than 5 cm"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/api/v1/species?range[maximum_height_cm]=,5")," only return species lower than 5 cm"))),(0,l.kt)(i.Z,{groupId:"supports",defaultValue:"browser",values:[{label:"Browser",value:"browser"},{label:"CURL",value:"curl"},{label:"NodeJS",value:"node"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"browser",mdxType:"TabItem"},(0,l.kt)("p",null,"Open your browser and navigate to"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&range%5Bmaximum_height_cm%5D=5,20"},(0,l.kt)("inlineCode",{parentName:"a"},"https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&range[maximum_height_cm]=5,20")))),(0,l.kt)(o.Z,{value:"curl",mdxType:"TabItem"},(0,l.kt)("p",null,"In your terminal:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"curl 'https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&range[maximum_height_cm]=5,20'\n"))),(0,l.kt)(o.Z,{value:"node",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const fetch = require('node-fetch');\n\n(async () => {\n  const response = await fetch('https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&range[maximum_height_cm]=5,20');\n  const json = await response.json();\n  console.log(json);\n})();\n")))),(0,l.kt)("p",null,"And we got:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "data": [\n        {\n            "author": "L.",\n            "bibliography": "Sp. Pl.: 767 (1753)",\n            "common_name": "white clover",\n            "family": "Fabaceae",\n            "family_common_name": "Pea family",\n            "genus": "Trifolium",\n            "genus_id": 5044,\n            "id": 189539,\n            "image_url": "https://bs.floristic.org/image/o/c766ed84c547abac6021244bc0014d665ba7726f",\n            "links": {\n                "genus": "/api/v1/genus/trifolium",\n                "plant": "/api/v1/plants/trifolium-repens",\n                "self": "/api/v1/species/trifolium-repens"\n            },\n            "plant_id": 183906,\n            "rank": "species",\n            "scientific_name": "Trifolium repens",\n            "slug": "trifolium-repens",\n            "status": "accepted",\n            "synonyms": [\n                "Trifolium repens var. atropurpureum",\n                "Amoria repens"\n            ],\n            "year": 1753\n        },\n        {\n            "author": "L.",\n            "bibliography": "Sp. Pl.: 112 (1753)",\n            "common_name": "common plantain",\n            "family": "Plantaginaceae",\n            "family_common_name": "Plantain family",\n            "genus": "Plantago",\n            "genus_id": 5418,\n            "id": 167892,\n            "image_url": "https://bs.floristic.org/image/o/36c2225c7d24a897eaf055e99eac26b3f5ceffa3",\n            "links": {\n                "genus": "/api/v1/genus/plantago",\n                "plant": "/api/v1/plants/plantago-major",\n                "self": "/api/v1/species/plantago-major"\n            },\xe5\n            "plant_id": 162259,\n            "rank": "species",\n            "scientific_name": "Plantago major",\n            "slug": "plantago-major",\n            "status": "accepted",\n            "synonyms": [\n                "Plantago major var. pilgeri",\n                "Plantago major var. pachyphylla",\n                "Plantago minima",\n                "Plantago major var. scopulorum"\n            ],\n            "year": 1753\n        },\n        // ... 28 more items...\n    ],\n    "links": {\n        "first": "/api/v1/species?page=1&range%5Bmaximum_height_cm%5D=5%2C20",\n        "last": "/api/v1/species?page=11&range%5Bmaximum_height_cm%5D=5%2C20",\n        "next": "/api/v1/species?page=2&range%5Bmaximum_height_cm%5D=5%2C20",\n        "self": "/api/v1/species?range%5Bmaximum_height_cm%5D=5%2C20"\n    },\n    "meta": {\n        "total": 218\n    }\n}\n')),(0,l.kt)("h3",{id:"exclude-null-values"},"Exclude null values"),(0,l.kt)("p",null,"Sometimes we need to exclude results with null or empty values. For that, we can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"filter_not[ATTRIBUTE]=null")," parameter, which will exclude from the response all entries where ",(0,l.kt)("inlineCode",{parentName:"p"},"ATTRIBUTE")," is ",(0,l.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,l.kt)("p",null,"For example, if we want all edible plants, we can either:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Query all plants with edible roots, stem, leaves, flowers, fruits and seeds:"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-http"},"https://trefle.io/api/v1/plants?token=YOUR_TREFLE_TOKEN&filter[edible_part]=roots,stem,leaves,flowers,fruits,seeds\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Exclude all plants without edible parts:"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-http"},"https://trefle.io/api/v1/plants?token=YOUR_TREFLE_TOKEN&filter_not[edible_part]=null\n")))}v.isMDXComponent=!0}}]);