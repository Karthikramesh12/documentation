"use strict";(self.webpackChunktrefle_docs=self.webpackChunktrefle_docs||[]).push([[462],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(n),f=a,m=c["".concat(s,".").concat(f)]||c[f]||d[f]||o;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return i}});var r=n(7294),a=n(6010),o="tabItem_Ymn6";function i(e){var t=e.children,n=e.hidden,i=e.className;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,i),hidden:n},t)}},5488:function(e,t,n){n.d(t,{Z:function(){return f}});var r=n(7462),a=n(7294),o=n(6010),i=n(2389),l=n(7392),s=n(7094),u=n(2466),p="tabList__CuJ",c="tabItem_LNqP";function d(e){var t,n,i=e.lazy,d=e.block,f=e.defaultValue,m=e.values,h=e.groupId,g=e.className,b=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=m?m:b.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),y=(0,l.l)(v,(function(e,t){return e.value===t.value}));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===f?f:null!=(t=null!=f?f:null==(n=b.find((function(e){return e.props.default})))?void 0:n.props.value)?t:b[0].props.value;if(null!==k&&!v.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var T=(0,s.U)(),w=T.tabGroupChoices,N=T.setTabGroupChoices,O=(0,a.useState)(k),E=O[0],j=O[1],_=[],x=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=h){var C=w[h];null!=C&&C!==E&&v.some((function(e){return e.value===C}))&&j(C)}var S=function(e){var t=e.currentTarget,n=_.indexOf(t),r=v[n].value;r!==E&&(x(t),j(r),null!=h&&N(h,String(r)))},P=function(e){var t,n=null;switch(e.key){case"Enter":S(e);break;case"ArrowRight":var r,a=_.indexOf(e.currentTarget)+1;n=null!=(r=_[a])?r:_[0];break;case"ArrowLeft":var o,i=_.indexOf(e.currentTarget)-1;n=null!=(o=_[i])?o:_[_.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",p)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":d},g)},v.map((function(e){var t=e.value,n=e.label,i=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:E===t?0:-1,"aria-selected":E===t,key:t,ref:function(e){return _.push(e)},onKeyDown:P,onClick:S},i,{className:(0,o.Z)("tabs__item",c,null==i?void 0:i.className,{"tabs__item--active":E===t})}),null!=n?n:t)}))),i?(0,a.cloneElement)(b.filter((function(e){return e.props.value===E}))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},b.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==E})}))))}function f(e){var t=(0,i.Z)();return a.createElement(d,(0,r.Z)({key:String(t)},e))}},9479:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return f}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=n(5488),l=n(5162),s=["components"],u={id:"reporting-errors",title:"Reporting an error",sidebar_label:"Reporting errors"},p=void 0,c={unversionedId:"guides/reporting-errors",id:"guides/reporting-errors",title:"Reporting an error",description:"",source:"@site/docs/guides/reporting-errors.md",sourceDirName:"guides",slug:"/guides/reporting-errors",permalink:"/docs/guides/reporting-errors",draft:!1,editUrl:"https://github.com/treflehq/documentation/edit/master/docs/guides/reporting-errors.md",tags:[],version:"current",lastUpdatedBy:"Andr\xe9 Aubin",lastUpdatedAt:1670748298,formattedLastUpdatedAt:"Dec 11, 2022",frontMatter:{id:"reporting-errors",title:"Reporting an error",sidebar_label:"Reporting errors"},sidebar:"someSidebar",previous:{title:"Searching",permalink:"/docs/guides/searching"},next:{title:"Plants fields",permalink:"/docs/advanced/plants-fields"}},d={},f=[{value:"Sending the report",id:"sending-the-report",level:3},{value:"Fixing the data yourself",id:"fixing-the-data-yourself",level:3},{value:"Testing",id:"testing",level:3}],m={toc:f};function h(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The team behind Trefle is working hard to complete, correct and check the data, but ",(0,o.kt)("strong",{parentName:"p"},"there is a lot"),"."),(0,o.kt)("p",null,"In order to help us, you can report an error when you see one. That's really helpful for us."),(0,o.kt)("p",null,"Reporting an error is done by doing a ",(0,o.kt)("inlineCode",{parentName:"p"},"POST")," request on the ",(0,o.kt)("inlineCode",{parentName:"p"},"/api/v1/species/{species_id}/report")," endpoint, with an optional ",(0,o.kt)("inlineCode",{parentName:"p"},"notes")," parameter. ",(0,o.kt)("a",{parentName:"p",href:"/reference/#operation/reportSpecies"},"See in the reference"),"."),(0,o.kt)("h3",{id:"sending-the-report"},"Sending the report"),(0,o.kt)("p",null,"Let's say we want to report an error on the ",(0,o.kt)("inlineCode",{parentName:"p"},"Abies Alba")," species, because we found out that the maximum height is wrong."),(0,o.kt)("p",null,"The payload we will send will be like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "notes": "The height is wrong",\n}\n')),(0,o.kt)(i.Z,{groupId:"supports",defaultValue:"curl",values:[{label:"CURL",value:"curl"},{label:"NodeJS",value:"node"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"curl",mdxType:"TabItem"},(0,o.kt)("p",null,"In your terminal:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl -XPOST -H "Content-type: application/json" \\\n            -d \'{"notes":"The height is wrong"}\' \\\n            \'https://trefle.io/api/v1/species/abies-alba/report?token=YOUR_TREFLE_TOKEN\'\n'))),(0,o.kt)(l.Z,{value:"node",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const fetch = require('node-fetch');\n\n// The parameters for our POST request\nconst params = {\n  notes: 'The height is wrong'\n}\n\n(async () => {\n  const response = await fetch(\n    'https://trefle.io/api/v1/species/abies-alba/report?token=YOUR_TREFLE_TOKEN', {\n      method: 'post',\n      body: JSON.stringify(params),\n      headers: { 'Content-Type': 'application/json' }\n    });\n  const json = await response.json();\n  console.log(json);\n})();\n")))),(0,o.kt)("p",null,"And we got:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "id": 9,\n    "record_type": "Species",\n    "record_id": 1164724,\n    "user_id": 106,\n    "warning_type": "report",\n    "change_status": "pending",\n    "change_type": "update",\n    "accepted_by": null,\n    "notes": "The height is wrong",\n    "created_at": "2020-07-13T17:53:51.537Z",\n    "updated_at": "2020-07-13T17:53:51.542Z",\n    "correction": null,\n    "changes": null\n  },\n  "meta": {\n    "last_modified": "2020-07-13T17:53:51.542Z"\n  }\n}\n')),(0,o.kt)("p",null,"This means that your report has been created, and is pending validation."),(0,o.kt)("admonition",{title:"Please send a note",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"notes")," parameter is optional, meaning that you could just do a POST request on ",(0,o.kt)("inlineCode",{parentName:"p"},"https://trefle.io/api/v1/species/abies-alba/report")," to send us a report. Unless the errors is obvious, please don't do that, as we won't really know where to start.")),(0,o.kt)("h3",{id:"fixing-the-data-yourself"},"Fixing the data yourself"),(0,o.kt)("p",null,"If you're not intimidated by big API calls, you can help us more by ",(0,o.kt)("strong",{parentName:"p"},"correcting the data yourself"),". You can see how to do it in the ",(0,o.kt)("a",{parentName:"p",href:"/docs/advanced/complete-data"},'"How to complete data" section of the guide'),"."),(0,o.kt)("h3",{id:"testing"},"Testing"),(0,o.kt)("p",null,"If you want to test a report of a species, set the ",(0,o.kt)("inlineCode",{parentName:"p"},"notes")," field to ",(0,o.kt)("inlineCode",{parentName:"p"},"TEST"),". They will be not reviewed, and automatically rejected after some time."),(0,o.kt)("p",null,"For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# This correction will not be reviewed, and rejected after some time\ncurl -XPOST -H "Content-type: application/json" \\\n            -d \'{"notes":"TEST"}\' \\\n            \'https://trefle.io/api/v1/species/abies-alba/report?token=YOUR_TREFLE_TOKEN\'\n')))}h.isMDXComponent=!0}}]);