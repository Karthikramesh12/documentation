(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{151:function(e,a,n){"use strict";n.r(a),n.d(a,"frontMatter",(function(){return o})),n.d(a,"metadata",(function(){return c})),n.d(a,"rightToc",(function(){return p})),n.d(a,"default",(function(){return m}));var t=n(2),i=n(9),l=(n(0),n(181)),r=n(176),s=n(177),o={id:"filtering",title:"Filtering"},c={id:"guides/filtering",isDocsHomePage:!1,title:"Filtering",description:"As you may have seen, there is a lot of plants here. In order to find what you're looking for, you can add filters to your query. The full list of available filters are in the reference.",source:"@site/docs/guides/filtering.md",permalink:"/docs/guides/filtering",editUrl:"https://github.com/treflehq/documentation/edit/master/docs/guides/filtering.md",lastUpdatedBy:"Andr\xe9 Aubin",lastUpdatedAt:1594564898,sidebar:"someSidebar",previous:{title:"Pagination",permalink:"/docs/guides/pagination"},next:{title:"Ordering results",permalink:"/docs/guides/sorting"}},p=[{value:"Filter on a single value",id:"filter-on-a-single-value",children:[]},{value:"Filter on several values",id:"filter-on-several-values",children:[]},{value:"Filter on ranges",id:"filter-on-ranges",children:[]},{value:"Exclude null values",id:"exclude-null-values",children:[]}],b={rightToc:p};function m(e){var a=e.components,n=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(t.a)({},b,n,{components:a,mdxType:"MDXLayout"}),Object(l.b)("p",null,"As you may have seen, there is a lot of plants here. In order to find what you're looking for, you can add filters to your query. The full list of available filters are in the reference."),Object(l.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(l.b)("div",Object(t.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",Object(t.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(t.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(l.b)("path",Object(t.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"In short")),Object(l.b)("div",Object(t.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("p",{parentName:"div"},"We can filter on one or several values, with the ",Object(l.b)("inlineCode",{parentName:"p"},"filter[FIELD]=value1,value2,value3...")," parameter, or on a range of values, with the ",Object(l.b)("inlineCode",{parentName:"p"},"range[FIELD]=min,max")," parameter."))),Object(l.b)("h3",{id:"filter-on-a-single-value"},"Filter on a single value"),Object(l.b)("p",null,'Let\'s query only plants with the "Beach Strawberry" common name:.'),Object(l.b)("p",null,Object(l.b)("a",Object(t.a)({parentName:"p"},{href:"https://trefle.io/api/v1/plants?token=YOUR_TREFLE_TOKEN&filter%5Bcommon_name%5D=beach%20strawberry"}),"https://trefle.io/api/v1/plants?token=YOUR_TREFLE_TOKEN&filter[common_name]=beach%20strawberry")),Object(l.b)(r.a,{groupId:"supports",defaultValue:"browser",values:[{label:"Browser",value:"browser"},{label:"CURL",value:"curl"},{label:"NodeJS",value:"node"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"browser",mdxType:"TabItem"},Object(l.b)("p",null,"Open your browser and navigate to"),Object(l.b)("p",null,Object(l.b)("a",Object(t.a)({parentName:"p"},{href:"https://trefle.io/api/v1/plants?token=YOUR_TREFLE_TOKEN&filter%5Bcommon_name%5D=beach%20strawberry"}),Object(l.b)("inlineCode",{parentName:"a"},"https://trefle.io/api/v1/plants?token=YOUR_TREFLE_TOKEN&filter[common_name]=beach%20strawberry")))),Object(l.b)(s.a,{value:"curl",mdxType:"TabItem"},Object(l.b)("p",null,"In your terminal:"),Object(l.b)("pre",null,Object(l.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"curl 'https://trefle.io/api/v1/plants?token=YOUR_TREFLE_TOKEN&filter[common_name]=beach%20strawberry'\n"))),Object(l.b)(s.a,{value:"node",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),"const fetch = require('node-fetch');\n\n(async () => {\n  const response = await fetch('https://trefle.io/api/v1/plants?token=YOUR_TREFLE_TOKEN&filter[common_name]=beach%20strawberry');\n  const json = await response.json();\n  console.log(json);\n})();\n")))),Object(l.b)("p",null,"And we got:"),Object(l.b)("pre",null,Object(l.b)("code",Object(t.a)({parentName:"pre"},{className:"language-json"}),'{\n    "data": [\n        {\n            "author": "(L.) Mill.",\n            "bibliography": "Gard. Dict. ed. 8 : n.\xb0 4 (1768)",\n            "common_name": "beach strawberry",\n            "complete_data": true,\n            "family_common_name": "Rose family",\n            "genus_id": 2585,\n            "id": 131974,\n            "image_url": null,\n            "links": {\n                "genus": "/api/v1/genus/fragaria",\n                "self": "/api/v1/plants/fragaria-chiloensis",\n                "species": "/api/v1/plants/fragaria-chiloensis/species"\n            },\n            "main_species_id": 137607,\n            "observations": "Bolivia, C. & S. Chile to S. Argentina",\n            "scientific_name": "Fragaria chiloensis",\n            "slug": "fragaria-chiloensis",\n            "vegetable": false,\n            "year": 1768\n        }\n    ],\n    "links": {\n        "first": "/api/v1/plants?filter%5Bcommon_name%5D=beach+strawberry&page=1",\n        "last": "/api/v1/plants?filter%5Bcommon_name%5D=beach+strawberry&page=1",\n        "self": "/api/v1/plants?filter%5Bcommon_name%5D=beach+strawberry"\n    },\n    "meta": {\n        "total": 1\n    }\n}\n')),Object(l.b)("h3",{id:"filter-on-several-values"},"Filter on several values"),Object(l.b)("p",null,"Now, we can add more criterias by separating our values with a comma (",Object(l.b)("inlineCode",{parentName:"p"},","),")."),Object(l.b)("p",null,"Let's query only species with edible roots ",Object(l.b)("strong",{parentName:"p"},"OR")," leaves:"),Object(l.b)("p",null,Object(l.b)("a",Object(t.a)({parentName:"p"},{href:"https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&filter%5Bedible_part%5D=roots,leaves"}),"https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&filter[edible_part]=roots,leaves")),Object(l.b)(r.a,{groupId:"supports",defaultValue:"browser",values:[{label:"Browser",value:"browser"},{label:"CURL",value:"curl"},{label:"NodeJS",value:"node"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"browser",mdxType:"TabItem"},Object(l.b)("p",null,"Open your browser and navigate to"),Object(l.b)("p",null,Object(l.b)("a",Object(t.a)({parentName:"p"},{href:"https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&filter%5Bedible_part%5D=roots,leaves"}),Object(l.b)("inlineCode",{parentName:"a"},"https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&filter[edible_part]=roots,leaves")))),Object(l.b)(s.a,{value:"curl",mdxType:"TabItem"},Object(l.b)("p",null,"In your terminal:"),Object(l.b)("pre",null,Object(l.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"curl 'https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&filter[edible_part]=roots,leaves'\n"))),Object(l.b)(s.a,{value:"node",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),"const fetch = require('node-fetch');\n\n(async () => {\n  const response = await fetch('https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&filter[edible_part]=roots,leaves');\n  const json = await response.json();\n  console.log(json);\n})();\n")))),Object(l.b)("p",null,"And we got:"),Object(l.b)("pre",null,Object(l.b)("code",Object(t.a)({parentName:"pre"},{className:"language-json"}),'{\n    "data": [\n        {\n            "author": "L.",\n            "bibliography": "Sp. pl. 1:219.  1753",\n            "common_name": "lambsquarters",\n            "family": "Amaranthaceae",\n            "family_common_name": "Goosefoot family",\n            "genus": "Chenopodium",\n            "genus_id": 1690,\n            "id": 119861,\n            "image_url": "https://bs.floristic.org/image/o/7210dfc0c2a48bdde194bef37c7b7956974bc1b7",\n            "links": {\n                "genus": "/api/v1/genus/chenopodium",\n                "plant": "/api/v1/plants/chenopodium-album",\n                "self": "/api/v1/species/chenopodium-album"\n            },\n            "plant_id": 114228,\n            "rank": "species",\n            "scientific_name": "Chenopodium album",\n            "slug": "chenopodium-album",\n            "status": "accepted",\n            "synonyms": [\n                "Chenopodium album var. viride",\n                "Chenopodium album var. candicans",\n                "Chenopodium album var. album",\n                "Chenopodium paucidentatum",\n                "Chenopodium pedunculare",\n                "Chenopodium album var. polymorphum"\n            ],\n            "year": 1753\n        },\n        {\n            "author": "L.",\n            "bibliography": "Sp. Pl.: 813 (1753)",\n            "common_name": "chicory",\n            "family": "Asteraceae",\n            "family_common_name": "Aster family",\n            "genus": "Cichorium",\n            "genus_id": 1778,\n            "id": 120546,\n            "image_url": "https://bs.floristic.org/image/o/eb049be6b9186aed76ada3c8d3cd54d762842aa8",\n            "links": {\n                "genus": "/api/v1/genus/cichorium",\n                "plant": "/api/v1/plants/cichorium-intybus",\n                "self": "/api/v1/species/cichorium-intybus"\n            },\n            "plant_id": 114913,\n            "rank": "species",\n            "scientific_name": "Cichorium intybus",\n            "slug": "cichorium-intybus",\n            "status": "accepted",\n            "synonyms": [\n                "Cichorium divaricatum",\n                "Cichorium cicorea",\n                "Cichorium byzantinum",\n                "Huernia verekeri var. stenensonii"\n            ],\n            "year": 1753\n        },\n        // ... 28 more items...\n    ],\n    "links": {\n        "first": "/api/v1/species?filter%5Bedible_part%5D=roots%2Cleaves&page=1",\n        "last": "/api/v1/species?filter%5Bedible_part%5D=roots%2Cleaves&page=4",\n        "next": "/api/v1/species?filter%5Bedible_part%5D=roots%2Cleaves&page=2",\n        "self": "/api/v1/species?filter%5Bedible_part%5D=roots%2Cleaves"\n    },\n    "meta": {\n        "total": 80\n    }\n}\n')),Object(l.b)("h3",{id:"filter-on-ranges"},"Filter on ranges"),Object(l.b)("p",null,"Now we want to filter on a range of values."),Object(l.b)("p",null,"Let's query only species with a minimum height ",Object(l.b)("strong",{parentName:"p"},"between")," 5 ",Object(l.b)("strong",{parentName:"p"},"and")," 20 centimeters:"),Object(l.b)("p",null,Object(l.b)("a",Object(t.a)({parentName:"p"},{href:"https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&range%5Bmaximum_height_cm%5D=5,20"}),"https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&range[maximum_height_cm]=5,20")),Object(l.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(l.b)("div",Object(t.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",Object(t.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(t.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(l.b)("path",Object(t.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"Minimum and maximum values")),Object(l.b)("div",Object(t.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("p",{parentName:"div"},"Filtering on ranges also allow to set only minimum or maximum values. For example:"),Object(l.b)("ul",{parentName:"div"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"/api/v1/species?range[maximum_height_cm]=5")," only return species higher than 5 cm"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"/api/v1/species?range[maximum_height_cm]=,5")," only return species lower than 5 cm")))),Object(l.b)(r.a,{groupId:"supports",defaultValue:"browser",values:[{label:"Browser",value:"browser"},{label:"CURL",value:"curl"},{label:"NodeJS",value:"node"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"browser",mdxType:"TabItem"},Object(l.b)("p",null,"Open your browser and navigate to"),Object(l.b)("p",null,Object(l.b)("a",Object(t.a)({parentName:"p"},{href:"https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&range%5Bmaximum_height_cm%5D=5,20"}),Object(l.b)("inlineCode",{parentName:"a"},"https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&range[maximum_height_cm]=5,20")))),Object(l.b)(s.a,{value:"curl",mdxType:"TabItem"},Object(l.b)("p",null,"In your terminal:"),Object(l.b)("pre",null,Object(l.b)("code",Object(t.a)({parentName:"pre"},{className:"language-bash"}),"curl 'https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&range[maximum_height_cm]=5,20'\n"))),Object(l.b)(s.a,{value:"node",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),"const fetch = require('node-fetch');\n\n(async () => {\n  const response = await fetch('https://trefle.io/api/v1/species?token=YOUR_TREFLE_TOKEN&range[maximum_height_cm]=5,20');\n  const json = await response.json();\n  console.log(json);\n})();\n")))),Object(l.b)("p",null,"And we got:"),Object(l.b)("pre",null,Object(l.b)("code",Object(t.a)({parentName:"pre"},{className:"language-json"}),'{\n    "data": [\n        {\n            "author": "L.",\n            "bibliography": "Sp. Pl.: 767 (1753)",\n            "common_name": "white clover",\n            "family": "Fabaceae",\n            "family_common_name": "Pea family",\n            "genus": "Trifolium",\n            "genus_id": 5044,\n            "id": 189539,\n            "image_url": "https://bs.floristic.org/image/o/c766ed84c547abac6021244bc0014d665ba7726f",\n            "links": {\n                "genus": "/api/v1/genus/trifolium",\n                "plant": "/api/v1/plants/trifolium-repens",\n                "self": "/api/v1/species/trifolium-repens"\n            },\n            "plant_id": 183906,\n            "rank": "species",\n            "scientific_name": "Trifolium repens",\n            "slug": "trifolium-repens",\n            "status": "accepted",\n            "synonyms": [\n                "Trifolium repens var. atropurpureum",\n                "Amoria repens"\n            ],\n            "year": 1753\n        },\n        {\n            "author": "L.",\n            "bibliography": "Sp. Pl.: 112 (1753)",\n            "common_name": "common plantain",\n            "family": "Plantaginaceae",\n            "family_common_name": "Plantain family",\n            "genus": "Plantago",\n            "genus_id": 5418,\n            "id": 167892,\n            "image_url": "https://bs.floristic.org/image/o/36c2225c7d24a897eaf055e99eac26b3f5ceffa3",\n            "links": {\n                "genus": "/api/v1/genus/plantago",\n                "plant": "/api/v1/plants/plantago-major",\n                "self": "/api/v1/species/plantago-major"\n            },\xe5\n            "plant_id": 162259,\n            "rank": "species",\n            "scientific_name": "Plantago major",\n            "slug": "plantago-major",\n            "status": "accepted",\n            "synonyms": [\n                "Plantago major var. pilgeri",\n                "Plantago major var. pachyphylla",\n                "Plantago minima",\n                "Plantago major var. scopulorum"\n            ],\n            "year": 1753\n        },\n        // ... 28 more items...\n    ],\n    "links": {\n        "first": "/api/v1/species?page=1&range%5Bmaximum_height_cm%5D=5%2C20",\n        "last": "/api/v1/species?page=11&range%5Bmaximum_height_cm%5D=5%2C20",\n        "next": "/api/v1/species?page=2&range%5Bmaximum_height_cm%5D=5%2C20",\n        "self": "/api/v1/species?range%5Bmaximum_height_cm%5D=5%2C20"\n    },\n    "meta": {\n        "total": 218\n    }\n}\n')),Object(l.b)("h3",{id:"exclude-null-values"},"Exclude null values"),Object(l.b)("p",null,"Sometimes we need to exclude results with null or empty values. For that, we can use the ",Object(l.b)("inlineCode",{parentName:"p"},"filter_not[ATTRIBUTE]")," parameter, which will exclude from the response all entries where ",Object(l.b)("inlineCode",{parentName:"p"},"ATTRIBUTE")," is ",Object(l.b)("inlineCode",{parentName:"p"},"null"),"."),Object(l.b)("p",null,"For example, if we want all edible plants, we can either:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Query all plants with edible roots, stem, leaves, flowers, fruits and seeds:"))),Object(l.b)("pre",null,Object(l.b)("code",Object(t.a)({parentName:"pre"},{className:"language-http"}),"https://trefle.io/api/v1/plants?token=YOUR_TREFLE_TOKEN&filter[edible_part]=roots,stem,leaves,flowers,fruits,seeds\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Exclude all plants without edible parts:"))),Object(l.b)("pre",null,Object(l.b)("code",Object(t.a)({parentName:"pre"},{className:"language-http"}),"https://trefle.io/api/v1/plants?token=YOUR_TREFLE_TOKEN&filter_not[edible_part]\n")))}m.isMDXComponent=!0},176:function(e,a,n){"use strict";n(25),n(21),n(20);var t=n(0),i=n.n(t),l=n(184),r=n(172),s=n(130),o=n.n(s),c=37,p=39;a.a=function(e){var a=e.block,n=e.children,s=e.defaultValue,b=e.values,m=e.groupId,u=Object(l.a)(),d=u.tabGroupChoices,h=u.setTabGroupChoices,f=Object(t.useState)(s),g=f[0],O=f[1];if(null!=m){var v=d[m];null!=v&&v!==g&&b.some((function(e){return e.value===v}))&&O(v)}var j=function(e){O(e),null!=m&&h(m,e)},_=[];return i.a.createElement("div",null,i.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(r.a)("tabs",{"tabs--block":a})},b.map((function(e){var a=e.value,n=e.label;return i.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":g===a,className:Object(r.a)("tabs__item",o.a.tabItem,{"tabs__item--active":g===a}),key:a,ref:function(e){return _.push(e)},onKeyDown:function(e){return function(e,a,n){switch(n.keyCode){case p:!function(e,a){var n=e.indexOf(a)+1;e[n]?e[n].focus():e[0].focus()}(e,a);break;case c:!function(e,a){var n=e.indexOf(a)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,a)}}(_,e.target,e)},onFocus:function(){return j(a)},onClick:function(){return j(a)}},n)}))),i.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},t.Children.toArray(n).filter((function(e){return e.props.value===g}))[0]))}},177:function(e,a,n){"use strict";var t=n(0),i=n.n(t);a.a=function(e){return i.a.createElement("div",null,e.children)}}}]);